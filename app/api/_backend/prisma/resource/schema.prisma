// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "./generated/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Shoe {
  id        Int         @id @default(autoincrement()) @map("id")
  color     String      @map("color")
  sole      String      @map("sole")
  name      String      @unique @map("name")
  note      String      @map("note")
  companyId Int         @map("company_id")
  createdAt DateTime    @default(now()) @map("created_at")
  deletedAt DateTime?   @map("deleted_at")
  Company   Company     @relation(fields: [companyId], references: [id])
  Item      Item[]
  CustomTag CustomTag[]

  @@map("tb_shoes")
}

model Item {
  id         Int          @id @default(autoincrement()) @map("id")
  sku        String       @unique @default(uuid()) @map("sku")
  price      Decimal      @map("price")
  size       Int          @map("size")
  createdAt  DateTime     @default(now()) @map("created_at")
  deletedAt  DateTime?    @map("deleted_at")
  shoeId     Int          @map("shoe_id")
  Shoe       Shoe         @relation(fields: [shoeId], references: [id])
  Expedition Expedition[]
  Audit      Audit[]

  @@map("tb_items")
}

model Expedition {
  id        Int      @id @default(autoincrement()) @map("id")
  code      String   @unique @default(uuid()) @map("code")
  note      String?  @map("note")
  itemId    Int      @map("item_id")
  userId    Int      @map("user_id")
  companyId Int      @map("company_id")
  createdAt DateTime @default(now()) @map("created_at")
  Item      Item     @relation(fields: [itemId], references: [id])
  User      User     @relation(fields: [userId], references: [id])
  Company   Company  @relation(fields: [companyId], references: [id])

  @@map("tb_expeditions")
}

model User {
  id         Int          @id @default(autoincrement()) @map("id")
  code       String       @unique @default(uuid()) @map("code")
  name       String       @map("name")
  email      String       @unique @map("email")
  password   String       @map("password")
  roleId     Int          @map("role_id")
  companyId  Int          @map("company_id")
  createdAt  DateTime     @default(now()) @map("created_at")
  deletedAt  DateTime?    @map("deleted_at")
  Role       Role         @relation(fields: [roleId], references: [id])
  Company    Company      @relation(fields: [companyId], references: [id])
  Expedition Expedition[]
  Audit      Audit[]
  CustomTag  CustomTag[]

  @@map("tb_users")
}

model Company {
  id         Int          @id @default(autoincrement()) @map("id")
  code       String       @unique @default(uuid()) @map("code")
  name       String       @unique @map("name")
  createdAt  DateTime     @default(now()) @map("created_at")
  deletedAt  DateTime?    @map("deleted_at")
  User       User[]
  Shoe       Shoe[]
  Audit      Audit[]
  CustomTag  CustomTag[]
  Expedition Expedition[]

  @@map("tb_companies")
}

model Role {
  id   Int    @id @default(autoincrement()) @map("id")
  name String @unique @map("name")
  note String @map("note")
  User User[]

  @@map("tb_roles")
}

model Audit {
  id        Int      @id @default(autoincrement()) @map("id")
  createdAt DateTime @default(now()) @map("created_at")
  note      String   @map("note")
  userId    Int      @map("user_id")
  itemId    Int?     @map("item_id")
  companyId Int      @map("company_id")
  Item      Item?    @relation(fields: [itemId], references: [id])
  User      User     @relation(fields: [userId], references: [id])
  Company   Company  @relation(fields: [companyId], references: [id])

  @@map("tb_audits")
}

model CustomTag {
  id        Int       @id @default(autoincrement()) @map("id")
  sku       String    @unique @default(uuid()) @map("sku")
  shoeId    Int       @map("shoe_id")
  userId    Int       @map("user_id")
  createdAt DateTime  @default(now()) @map("created_at")
  deletedAt DateTime? @map("deleted_at")
  companyId Int       @map("company_id")
  metadata  Json      @map("metadata")
  Shoe      Shoe      @relation(fields: [shoeId], references: [id])
  User      User      @relation(fields: [userId], references: [id])
  Company   Company   @relation(fields: [companyId], references: [id])

  @@map("tb_custom_tags")
}
